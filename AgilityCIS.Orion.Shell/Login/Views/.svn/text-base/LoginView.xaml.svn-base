<UserControl xmlns:vm="clr-namespace:AgilityCIS.Orion.Shell.ViewModel" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Custom="http://www.codeplex.com/prism" xmlns:controlsToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Toolkit" xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk" xmlns:Agility_Shell="clr-namespace:AgilityCIS.Orion.Shell" xmlns:Agility_Common="clr-namespace:AgilityCIS.Orion.Common;assembly=AgilityCIS.Orion.Common" xmlns:System="clr-namespace:System;assembly=mscorlib"    
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"    
             x:Class="AgilityCIS.Orion.Shell.Views.LoginView"
              xmlns:inter ="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
              xmlns:behaviors="clr-namespace:AgilityCIS.Orion.CustomBehaviors;assembly=AgilityCIS.Orion.CustomBehaviors"
Height="Auto"
    d:DesignHeight="600" d:DesignWidth="600" mc:Ignorable="d">
	<UserControl.Resources>
		<ControlTemplate x:Key="ProgressBarControlTemplate1" TargetType="ProgressBar">
			<Grid x:Name="Root">
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Determinate"/>
						<VisualState x:Name="Indeterminate">
							<Storyboard RepeatBehavior="Forever">
								<DoubleAnimation Storyboard.TargetName="IndeterminateGradientFill"
									Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X"
									Duration="00:00:.5" From="0" To="20" />
								<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
									<DiscreteObjectKeyFrame KeyTime="00:00:00">
										<DiscreteObjectKeyFrame.Value>
											<Visibility>Visible</Visibility>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
									<DiscreteObjectKeyFrame KeyTime="00:00:00">
										<DiscreteObjectKeyFrame.Value>
											<Visibility>Collapsed</Visibility>
										</DiscreteObjectKeyFrame.Value>
									</DiscreteObjectKeyFrame>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
                        <!--Default Root Visuals for either type of ProgressBar-->
				<Border x:Name="ProgressBarTrack" CornerRadius="3" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
				<Grid x:Name="ProgressBarRootGrid" >
                            <!-- Beginning of Gradient over all visuals -->
					<Rectangle Canvas.ZIndex="1" x:Name="ProgressBarRootGradient" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Stroke="#FFFFFFFF" RadiusX="1.5" RadiusY="1.5">
						<Rectangle.Fill>
							<LinearGradientBrush StartPoint=".7,0" EndPoint=".7,1">
								<GradientStop Color="#B2FFFFFF" Offset="0" />
								<GradientStop Color="#C6FFFFFF" Offset="0.15"/>
								<GradientStop Color="#D1FFFFFF" Offset="0.275" />
								<GradientStop Color="#C6FFFFFF" Offset="0.4"/>
								<GradientStop Color="#BFFFFFFF" Offset="0.65" />
								<GradientStop Color="#A5FFFFFF" Offset="0.75"/>
								<GradientStop Color="#91FFFFFF" Offset="0.85"/>
								<GradientStop Color="#7289CC53" Offset="1" />
							</LinearGradientBrush>
						</Rectangle.Fill>
					</Rectangle>
                            <!-- Beginning of Indeterminate Progress Bar Visuals-->
					<Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
						<Rectangle x:Name="IndeterminateSolidFill" Stroke="#FF448DCA" RadiusX="2" RadiusY="2" StrokeThickness="0" Margin="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Foreground}" Opacity="1" RenderTransformOrigin="0.5,0.5" />
						<Rectangle x:Name="IndeterminateGradientFill" RadiusX="2" RadiusY="2" StrokeThickness="1" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" >
							<Rectangle.Fill>
								<LinearGradientBrush SpreadMethod="Repeat" MappingMode="Absolute" EndPoint="0,1" StartPoint="20,1">
									<LinearGradientBrush.Transform >
										<TransformGroup>
											<TranslateTransform X="0" />
											<SkewTransform AngleX="-30" />
										</TransformGroup>
									</LinearGradientBrush.Transform>
									<GradientStop Color="#FFFFFFFF" Offset="0"/>
									<GradientStop Color="#00FFFFFF" Offset=".25"/>
									<GradientStop Color="#FFFFFFFF" Offset="0.85"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Grid>
                            <!-- Beginning of Determinate Progress Bar Visuals-->
					<Grid x:Name="DeterminateRoot" Margin="1" >
                                <!--Background -->
						<Rectangle HorizontalAlignment="Left" x:Name="ProgressBarIndicator" Margin="{TemplateBinding BorderThickness}" StrokeThickness="0.5" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Foreground}"/>
					</Grid>
				</Grid>
			</Grid>
		</ControlTemplate>
		<Style x:Key="BusyIndicatorStyle1" TargetType="controlsToolkit:BusyIndicator">
			<Setter Property="BusyContent" Value="Please wait..."/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="OverlayStyle">
				<Setter.Value>
					<Style TargetType="Rectangle">
						<Setter Property="Fill" Value="White"/>
						<Setter Property="Opacity" Value="0.5"/>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="ProgressBarStyle">
				<Setter.Value>
					<Style TargetType="ProgressBar">
						<Setter Property="IsIndeterminate" Value="True"/>
						<Setter Property="Height" Value="15"/>
						<Setter Property="Margin" Value="8,0,8,8"/>
					</Style>
				</Setter.Value>
			</Setter>
			<Setter Property="DisplayAfter" Value="00:00:00.1"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="controlsToolkit:BusyIndicator">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="VisibilityStates">
									<VisualState x:Name="Hidden">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Collapsed</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Visible">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<Visibility>Visible</Visibility>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="BusyStatusStates">
									<VisualState x:Name="Idle">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>True</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Busy">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetProperty="(Control.IsEnabled)" Storyboard.TargetName="content">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<System:Boolean>False</System:Boolean>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="#FF2F2B2B"/>
							<Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}" Fill="#66BBF7B9"/>
							<ContentPresenter x:Name="busycontent">
								<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
									<Border BorderThickness="1" CornerRadius="5" Background="#FF7DDA70">
										<Border CornerRadius="5" Margin="1">
											<Grid MinWidth="150">
												<Grid.RowDefinitions>
													<RowDefinition/>
													<RowDefinition Height="Auto"/>
												</Grid.RowDefinitions>
												<ContentPresenter ContentTemplate="{TemplateBinding BusyContentTemplate}" Content="{TemplateBinding BusyContent}" Margin="8"/>
												<ProgressBar Grid.Row="1" Style="{TemplateBinding ProgressBarStyle}" Background="#FF8BE78D" Foreground="#FF8BE78D" Template="{StaticResource ProgressBarControlTemplate1}" BorderBrush="#FF0DB847"/>
											</Grid>
										</Border>
									</Border>
								</Grid>
							</ContentPresenter>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid x:Name="LayoutRoot" Background="White">
		<Border x:Name="MainBorder">
			<Border.Background>
				<ImageBrush ImageSource="/AgilityCIS.Orion.Shell;component/Login/Images/bg.png" />
			</Border.Background>
			<controlsToolkit:BusyIndicator 
				IsBusy="{Binding IsBusy, Mode=OneWay}"
				DisplayAfter="0"
				BusyContent="Please wait..." Style="{StaticResource BusyIndicatorStyle2}">
				<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
					<Grid Margin="50,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="333" Height="205" Background="#FF8DAA7A" Opacity="0.9">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="0.413*"/>
							<ColumnDefinition Width="0.587*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="0.370*"/>
							<RowDefinition Height="0.140*"/>
							<RowDefinition Height="0.140*"/>
							<RowDefinition Height="0.140*"/>
							<RowDefinition Height="0.208*"/>
						</Grid.RowDefinitions>
						<Image Height="59" HorizontalAlignment="Center" Margin="0" x:Name="image1" Stretch="None" VerticalAlignment="Center" Width="211" Source="/AgilityCIS.Orion.Shell;component/Login/Images/agility-login.png" Grid.ColumnSpan="2" />
						<Button Command="{Binding LoginCommand}" Content="Login" Height="23" Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,45,0" x:Name="btnLogin" VerticalAlignment="Center" Width="50" BorderBrush="Black" Canvas.ZIndex="1" Style="{StaticResource LoginButton}">
							<Button.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FF5D744A"/>
									<GradientStop Color="#FFA1BE86" Offset="1"/>
									<GradientStop Color="#FF466E21" Offset="0.302"/>
								</LinearGradientBrush>
							</Button.Background>
						</Button>
						<TextBlock Margin="50,0,0,12" Grid.Row="1" TextWrapping="Wrap" Text="Username" HorizontalAlignment="Left" VerticalAlignment="Center"/>
						<TextBlock Margin="50,0,0,0" Grid.Row="2" TextWrapping="Wrap" Text="Password" VerticalAlignment="Center" HorizontalAlignment="Left"/>
						<PasswordBox Grid.Column="1" Margin="0" Grid.Row="2" Password="{Binding Password, Mode=TwoWay}"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="150" TabIndex="1">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="KeyDown">
									<Agility_Common:DefaultEnterButtonTrigger TargetName="btnLogin"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
 
                        </PasswordBox>
                        <TextBox Grid.Column="1" Margin="0" Grid.Row="1" Text="{Binding UserName, Mode=TwoWay}" TextWrapping="Wrap"  HorizontalAlignment="Left" VerticalAlignment="Center" Width="150" TabIndex="0">
                        	<i:Interaction.Triggers>
                        		<i:EventTrigger EventName="KeyDown">
                        			<Agility_Common:DefaultEnterButtonTrigger TargetName="btnLogin"/>
                        		</i:EventTrigger>
                        	</i:Interaction.Triggers>
                            <inter:Interaction.Behaviors>
                                <behaviors:RightClickTrigger/>
                            </inter:Interaction.Behaviors>

                        </TextBox>
                        <TextBlock Margin="50,0,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Language" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                        <ComboBox Grid.Row="3" Grid.Column="1" Width="150" HorizontalAlignment="Left" Height="24" VerticalAlignment="Center"  ItemsSource="{Binding Languages}"  SelectedItem="{Binding SelectedLanguage,Mode=Twoway}" 
                                                            SelectedValue="{Binding SelectedLanguage, Mode=TwoWay}" >
                        	
                        </ComboBox>
                    </Grid>
				</StackPanel>
			</controlsToolkit:BusyIndicator>
		</Border>
	</Grid>
</UserControl>
